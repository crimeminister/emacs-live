resource "google_container_node_pool" "test-cluster-1_default-pool" {
  cluster            = google_container_cluster.test-cluster-1.name
  initial_node_count = "2"
  location           = "northamerica-northeast1-a"

  management {
    auto_repair  = true
    auto_upgrade = true
  }

  name = "default-pool"

  node_config {
    disk_size_gb    = "100"
    disk_type       = "pd-standard"
    image_type      = "COS"
    labels          = {}
    local_ssd_count = "0"
    machine_type    = "g1-small"

    metadata = {
      disable-legacy-endpoints = "true"
    }

    oauth_scopes    = [
      "https://www.googleapis.com/auth/logging.write",
      "https://www.googleapis.com/auth/service.management.readonly",
      "https://www.googleapis.com/auth/monitoring",
      "https://www.googleapis.com/auth/devstorage.read_only",
      "https://www.googleapis.com/auth/servicecontrol",
      "https://www.googleapis.com/auth/trace.append"
    ]
    preemptible     = false
    service_account = "default"
  }

  node_count = "2"
  project    = "${var.project_id}"
  version    = "1.12.8-gke.10"
}

resource "google_container_node_pool" "node_pools" {
  lifecycle {
    create_before_destroy = true
  }

  count              = "${ length(var.node_pools) > 0 ? length(var.node_pools) : 0 }"
  location           = "${ var.region }"
  project            = "${ var.project_id }"
  cluster            = "${ google_container_cluster.default.name }"
  name               = "${ lookup( var.node_pools[count.index], "name" )}-${ random_string.pool_name.result }"
  initial_node_count = "${ lookup( var.node_pools[count.index], "min_node_count") }"

  autoscaling {
    min_node_count = "${ lookup( var.node_pools[count.index], "min_node_count") }"
    max_node_count = "${ lookup( var.node_pools[count.index], "max_node_count") }"
  }

  node_config {
    service_account = "${ google_service_account.default.email }"
    preemptible     = "${ lookup (var.node_pools[count.index], "preemptible") }"
    machine_type    = "${ lookup( var.node_pools[count.index], "machine_type" ) }"
    disk_size_gb    = "${ lookup( var.node_pools[count.index], "disk_size_gb" ) }"
    tags            = ["${var.cluster_name}-nodes", "${var.env}"]

    # OAuth scopes introducted to get around pull issues
    # https://cloud.google.com/kubernetes-engine/docs/how-to/hardening-your-cluster#reduce_node_sa_scopes
    oauth_scopes = [
      "https://www.googleapis.com/auth/logging.write",
      "https://www.googleapis.com/auth/monitoring",
      "https://www.googleapis.com/auth/devstorage.read_only",
    ]
  }

  management {
    auto_repair  = true
    auto_upgrade = true
  }
}
