resource "google_container_cluster" "test-cluster-1" {
  addons_config {
    horizontal_pod_autoscaling {
      disabled = false
    }

    http_load_balancing {
      disabled = false
    }

    kubernetes_dashboard {
      disabled = true
    }

    network_policy_config {
      disabled = true
    }
  }

  cluster_ipv4_cidr       = "10.8.0.0/14"
  enable_kubernetes_alpha = false
  enable_legacy_abac      = false
  initial_node_count      = "0"

  ip_allocation_policy {
    cluster_ipv4_cidr_block  = "10.8.0.0/14"
    node_ipv4_cidr_block     = "10.162.0.0/20"
    services_ipv4_cidr_block = "10.12.0.0/20"
    use_ip_aliases           = true
  }

  location        = "northamerica-northeast1-a"
  logging_service = "logging.googleapis.com"

  master_auth {
    client_certificate_config {
      issue_client_certificate = false
    }
  }

  master_authorized_networks_config {
  }
  monitoring_service = "monitoring.googleapis.com"
  name               = "test-cluster-1"
  network            = "${google_compute_network.default.self_link}"

  network_policy {
    enabled = false
  }

  node_version    = "1.12.8-gke.10"
  project         = "${var.project_id}"
  resource_labels = {}
  subnetwork      = "${google_compute_subnetwork.test1.self_link}"
}

resource "google_container_cluster" "default" {
  lifecycle {
    ignore_changes = [
      "min_master_version",
      "node_version",
    ]
  }

  provider                  = "google-beta"
  location                  = "${ var.region }"
  project                   = "${ var.project_id }"
  name                      = "${ var.cluster_name }"
  min_master_version        = "${ var.kubernetes_version }"
  node_version              = "${ var.kubernetes_version }"
  remove_default_node_pool  = true
  logging_service = "${var.kubernetes_logging_service}"
  monitoring_service = "${var.kubernetes_monitoring_service}"
  initial_node_count        = 1
  default_max_pods_per_node = "${var.max_pods_per_node}"

  master_auth {
    username = ""
    password = ""

    client_certificate_config {
      issue_client_certificate = false
    }
  }

  network    = "${ local.network }"
  subnetwork = "${ local.subnetwork }"

  private_cluster_config {
    enable_private_nodes   = true
    master_ipv4_cidr_block = "${ var.kubernetes_master_ipv4_cidr_block }"
  }

  master_authorized_networks_config {
    cidr_blocks = "${local.master_authorized_networks_config}"
  }

  ip_allocation_policy {
    cluster_secondary_range_name  = "${local.pod_secondary_range_name}"
    services_secondary_range_name = "${local.services_secondary_range_name}"
  }

  maintenance_policy {
    daily_maintenance_window {
      start_time = "06:00"
    }
  }

  addons_config {
    kubernetes_dashboard {
      disabled = true
    }

    horizontal_pod_autoscaling {
      disabled = false
    }

    http_load_balancing {
      disabled = "${local.http_load_balancing_disabled}"
    }

    network_policy_config {
      disabled = false
    }

    istio_config {
      disabled = "${local.istio_disabled}"
      auth     = "${var.istio_config["auth"] }"
    }

    cloudrun_config {
      disabled = "${local.cloudrun_disabled}"
    }

  }

  timeouts {
    create = "1h"
    update = "1h"
    delete = "1h"
  }

  depends_on = ["google_project_iam_member.default"]
}
